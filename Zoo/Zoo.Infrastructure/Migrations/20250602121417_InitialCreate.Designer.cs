// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zoo.Infrastructure;

#nullable disable

namespace Zoo.Infrastructure2.Migrations
{
    [DbContext(typeof(ZooContext))]
    [Migration("20250602121417_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("AnimalZookeeperModel", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ZookeeperId")
                        .HasColumnType("TEXT");

                    b.HasKey("AnimalId", "ZookeeperId");

                    b.HasIndex("ZookeeperId");

                    b.ToTable("AnimalZookeepers");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ZooId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ZookeeperId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.HasIndex("ZookeeperId")
                        .IsUnique();

                    b.ToTable("Animals", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.ZooModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zoos");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.ZookeeperModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ZooId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.ToTable("Zookeepers");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.BirdModel", b =>
                {
                    b.HasBaseType("Zoo.Infrastructure.Models.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Wingspan")
                        .HasColumnType("REAL");

                    b.ToTable("Birds", (string)null);
                });

            modelBuilder.Entity("AnimalZookeeperModel", b =>
                {
                    b.HasOne("Zoo.Infrastructure.Models.AnimalModel", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zoo.Infrastructure.Models.ZookeeperModel", "Zookeeper")
                        .WithMany()
                        .HasForeignKey("ZookeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Zookeeper");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.AnimalModel", b =>
                {
                    b.HasOne("Zoo.Infrastructure.Models.ZooModel", "Zoo")
                        .WithMany("Animals")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zoo.Infrastructure.Models.ZookeeperModel", "Zookeeper")
                        .WithOne("Animal")
                        .HasForeignKey("Zoo.Infrastructure.Models.AnimalModel", "ZookeeperId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Zoo");

                    b.Navigation("Zookeeper");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.ZookeeperModel", b =>
                {
                    b.HasOne("Zoo.Infrastructure.Models.ZooModel", "Zoo")
                        .WithMany("Zookeepers")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zoo");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.BirdModel", b =>
                {
                    b.HasOne("Zoo.Infrastructure.Models.AnimalModel", null)
                        .WithOne()
                        .HasForeignKey("Zoo.Infrastructure.Models.BirdModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.ZooModel", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Zookeepers");
                });

            modelBuilder.Entity("Zoo.Infrastructure.Models.ZookeeperModel", b =>
                {
                    b.Navigation("Animal")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
